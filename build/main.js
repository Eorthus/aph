/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./js/index.js":
/*!*********************!*\
  !*** ./js/index.js ***!
  \*********************/
/***/ (() => {

eval("//import \"../css/style.css\";\r\n//import \"../css/style.scss\";\r\n//import \"../img/images.js\";\r\n\r\n\r\n\r\nconst arrow = document.querySelector('.filter-head-img');\r\nconst filter = document.querySelector('.filter-head');\r\nfilter.onclick = function () {\r\n    arrow.classList.toggle('rotate')\r\n}\r\n\r\n\r\nconst API = 'https://jsonplaceholder.typicode.com/posts';\r\nclass List {\r\n    constructor() {\r\n        this.container = '.bottom-ul';\r\n        this.url = this.API;\r\n        this.goods = [];\r\n        this.item;\r\n    }\r\n    getJson(url) {\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                title: 'TODO item 1',\r\n                userId: 1,\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n        })\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                this.item = json;\r\n\r\n                for (let i = 0; i < 5; i++) {\r\n                    this.item.userId++;\r\n                    this.goods.push(this.item);\r\n\r\n                }\r\n                this.render(this.goods);\r\n                this.addElement(this.goods);\r\n                // this.delElement();\r\n                this.filter();\r\n                this.checked();\r\n\r\n            });\r\n    }\r\n    filter() {\r\n        document.querySelector('.filter').onclick = function (e) {\r\n            e.target.closest('.filter-checkbox').classList.toggle('selected');\r\n            e.target.closest('.filter-checkbox').querySelector('.mark').classList.toggle('mark-checked');\r\n            e.target.closest('.filter-checkbox').querySelector('.filter-checkbox-label').classList.toggle('label-checked');\r\n\r\n\r\n        }\r\n        document.getElementById('done').onclick = function () {\r\n            let inwork = document.querySelectorAll('.inwork')\r\n            inwork.forEach(element =>\r\n                element.classList.toggle('invisible')\r\n            )\r\n\r\n        }\r\n        document.getElementById('inwork').onclick = function () {\r\n            let done = document.querySelectorAll('.done')\r\n\r\n            done.forEach(element =>\r\n                element.classList.toggle('invisible')\r\n            )\r\n\r\n        }\r\n        document.getElementById('all').onclick = function () {\r\n            let all = document.querySelectorAll('.bottom-ul-li')\r\n            all.forEach(element => element.classList.toggle('invisible'))\r\n        }\r\n    }\r\n    checked() {\r\n\r\n        document.querySelector('.bottom-ul').onclick = function (e) {\r\n\r\n            e.target.closest('.bottom-ul-li').classList.toggle('done');\r\n            e.target.closest('.bottom-ul-li').classList.toggle('inwork');\r\n            e.target.closest('.bottom-ul-li').querySelector('.bottom-ul-li-span').classList.toggle('span-checked');\r\n            e.target.closest('.bottom-ul-li').querySelector('.bottom-ul-li-check-img').classList.toggle('img-checked');\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    addElement(goods) {\r\n        document.querySelector('.middle-enter').onclick = function () {\r\n            let newadd = document.getElementById('todo-add').value;\r\n            let product = {\r\n                title: newadd,\r\n                userId: 2,\r\n                id: 102,\r\n            };\r\n            goods.push(product);\r\n            list.renderOne(product)\r\n        }\r\n        document.querySelector('.middle-input').addEventListener(\"keydown\", function (event) {\r\n            if (event.keyCode == 13) {\r\n                console.log(12)\r\n                let newadd = document.getElementById('todo-add').value;\r\n                let product = {\r\n                    title: newadd,\r\n                    userId: 2,\r\n                    id: 102,\r\n                };\r\n                goods.push(product);\r\n                list.renderOne(product)\r\n            }\r\n        });\r\n\r\n    }\r\n    /*    delElement() {\r\n            document.querySelector('.bottom-ul').onclick = function (e) {\r\n                console.log(e.target);\r\n                if (e.target == `<button class=\"bottom-ul-li-cross\">x</button>`) {\r\n                    console.log(e.target.closest('bottom-ul-li'))\r\n                    e.target.closest('bottom-ul-li').classList.add('invisible');\r\n                }\r\n            }\r\n        }*/\r\n    save() {\r\n        document.querySelector('.bottom-ul').insertAdjacentHTML('beforeend', (localStorage.getItem(\"html\")));\r\n        list.filter();\r\n        console.log(1);\r\n\r\n        list.checked();\r\n        list.addElement(JSON.parse(localStorage.getItem(\"js\")));\r\n        //   list.delElement();\r\n        setInterval(() => {\r\n            localStorage.setItem(\"html\", document.querySelector('.bottom-ul').innerHTML);\r\n            localStorage.setItem(\"js\", JSON.stringify(list.goods));\r\n        }, 0)\r\n\r\n    }\r\n    render(goods) {\r\n        document.querySelector('.bottom-ul').innerHTML = \"\";\r\n        for (let item of goods) {\r\n            document.querySelector('.bottom-ul').insertAdjacentHTML('beforeend',\r\n                `<li class=\"bottom-ul-li  inwork\">\r\n<div class=\"bottom-ul-li-check\"><img class=\"bottom-ul-li-check-img\" src=\"./img/round.svg\"\r\n        alt=\"checked\"></div>\r\n<span class=\"bottom-ul-li-span\">${item.title}</span>\r\n<button class=\"bottom-ul-li-cross\">x</button>\r\n</li>`\r\n            )\r\n        }\r\n        localStorage.setItem(\"html\", document.querySelector('.bottom-ul').innerHTML);\r\n        localStorage.setItem(\"js\", JSON.stringify(goods));\r\n    }\r\n    renderOne(item) {\r\n\r\n        document.querySelector('.bottom-ul').insertAdjacentHTML('beforeend',\r\n            `<li class=\"bottom-ul-li  inwork\">\r\n<div class=\"bottom-ul-li-check\"><img class=\"bottom-ul-li-check-img\" src=\"./img/round.svg\"\r\n        alt=\"checked\"></div>\r\n<span class=\"bottom-ul-li-span\">${item.title}</span>\r\n<button class=\"bottom-ul-li-cross\">x</button>\r\n</li>`\r\n        )\r\n    }\r\n}\r\nclass itemlist extends List {\r\n    constructor() {\r\n        super(item, goods)\r\n        this.item = item;\r\n        this.goods = goods;\r\n        this.title;\r\n        this.id;\r\n        this.UserId;\r\n    }\r\n}\r\n\r\nlet list = new List();\r\nif (localStorage.getItem(\"html\")) {\r\n    list.save();\r\n} else {\r\n    list.getJson(API);\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://aph/./js/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./js/index.js"]();
/******/ 	
/******/ })()
;